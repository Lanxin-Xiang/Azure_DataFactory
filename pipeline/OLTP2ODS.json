{
	"name": "OLTP2ODS",
	"properties": {
		"activities": [
			{
				"name": "GetPurchaseTableList",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select table_schema, table_name from information_schema.tables where table_type = 'base table' and table_schema = 'Purchasing'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "PurchaseOrders",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetPurchaseTableList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetPurchaseTableList').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Script1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": "@{item().table_schema}.@{item().table_name}"
								},
								{
									"name": "Destination",
									"value": "@{item().table_schema}.@{item().table_name}"
								}
							],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"additionalColumns": [
										{
											"name": "IngestDatetime",
											"value": {
												"value": "@utcnow()",
												"type": "Expression"
											}
										},
										{
											"name": "Skey",
											"value": {
												"value": "@guid()",
												"type": "Expression"
											}
										}
									],
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "TableList",
									"type": "DatasetReference",
									"parameters": {
										"schema": {
											"value": "@item().table_schema",
											"type": "Expression"
										},
										"table": "@item().table_name"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AutoCreate",
									"type": "DatasetReference",
									"parameters": {
										"schema": {
											"value": "@item().table_schema",
											"type": "Expression"
										},
										"table": {
											"value": "@item().table_name",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Script1",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "ODS002",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"parameters": [
											{
												"name": "schema",
												"type": "String",
												"value": {
													"value": "@item().table_schema",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "table",
												"type": "String",
												"value": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "InsertQuery",
												"type": "String",
												"value": "",
												"direction": "Input"
											},
											{
												"name": "tablename",
												"type": "String",
												"value": {
													"value": "@schema+'.'+@table",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "DelQuery",
												"type": "String",
												"value": "",
												"direction": "Input"
											},
											{
												"name": "condition",
												"type": "String",
												"value": "",
												"direction": "Input"
											}
										],
										"type": "Query",
										"text": "set @condition =  'CAST(IngestDatetime AS DATE) < DATEADD(day, -7, Getdate())'\n\nset @InsertQuery = 'Insert into dbo.DeleteLog ([Table Name], [Delete Table pk], [Complete Date]) select '''+@tablename+''' as [Table Name], Skey, Getdate() as [Complete Date] from '+@tablename+' where '+@condition\nset @DelQuery = 'delete from ' + @tablename + ' where '+ @condition\n\nEXECUTE sp_executesql @InsertQuery\nEXECUTE sp_executesql @DelQuery"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Script2",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "Integration002",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": "insert into dbo.MasterTab ([Pipline Name], [Complete Date]) values('OLTP2ODS',  Getdate())"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2022-12-15T21:42:04Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}