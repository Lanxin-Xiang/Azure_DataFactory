{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LanxinDataFactory"
		},
		"Integration002_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Integration002'"
		},
		"ODS002_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ODS002'"
		},
		"WWI002_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'WWI002'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetPurchaseTableList",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select table_schema, table_name from information_schema.tables where table_type = 'base table' and table_schema = 'Purchasing'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PurchaseOrders",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetPurchaseTableList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetPurchaseTableList').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().table_schema}.@{item().table_name}"
										},
										{
											"name": "Destination",
											"value": "@{item().table_schema}.@{item().table_name}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"additionalColumns": [
												{
													"name": "IngestDatetime",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												},
												{
													"name": "Skey",
													"value": {
														"value": "@guid()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "TableList",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@item().table_schema",
													"type": "Expression"
												},
												"table": "@item().table_name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AutoCreate",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@item().table_schema",
													"type": "Expression"
												},
												"table": {
													"value": "@item().table_name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T21:42:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PurchaseOrders')]",
				"[concat(variables('factoryId'), '/datasets/TableList')]",
				"[concat(variables('factoryId'), '/datasets/AutoCreate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy PurchaseOrderLinesODS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "IngestDatetime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PurchaseOrderLines",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PurchaseOrderLinesODS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy SupplierCategories",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "IngestDatetime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SupplierCategories",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SupplierCategoriesODS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Suppliers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "IngestDatetime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Suppliers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SuppliersODS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy PurchaseOrders",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "IngestDatetime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PurchaseOrders",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PurchaseOrdersODS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy SupplierCategories_Archive",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "IngestDatetime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SupplierCategories_Archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SupplierCategories_ArchiveODS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Supplier_Archive",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "IngestDatetime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Suppliers_Archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Suppliers_ArchiveODS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy SuppliersTransactions",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "IngestDatetime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SupplierTransactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SupplierTransactionsODS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T15:23:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PurchaseOrderLines')]",
				"[concat(variables('factoryId'), '/datasets/PurchaseOrderLinesODS')]",
				"[concat(variables('factoryId'), '/datasets/SupplierCategories')]",
				"[concat(variables('factoryId'), '/datasets/SupplierCategoriesODS')]",
				"[concat(variables('factoryId'), '/datasets/Suppliers')]",
				"[concat(variables('factoryId'), '/datasets/SuppliersODS')]",
				"[concat(variables('factoryId'), '/datasets/PurchaseOrders')]",
				"[concat(variables('factoryId'), '/datasets/PurchaseOrdersODS')]",
				"[concat(variables('factoryId'), '/datasets/SupplierCategories_Archive')]",
				"[concat(variables('factoryId'), '/datasets/SupplierCategories_ArchiveODS')]",
				"[concat(variables('factoryId'), '/datasets/Suppliers_Archive')]",
				"[concat(variables('factoryId'), '/datasets/Suppliers_ArchiveODS')]",
				"[concat(variables('factoryId'), '/datasets/SupplierTransactions')]",
				"[concat(variables('factoryId'), '/datasets/SupplierTransactionsODS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoCreate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ODS002",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ODS002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Integration002",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Integration",
					"table": "temp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Integration002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PurchaseOrderLines')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WWI002",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Purchasing"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PurchaseOrderLineID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PurchaseOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderedOuters",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "ReceivedOuters",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PackageTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ExpectedUnitPricePerOuter",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "LastReceiptDate",
						"type": "date"
					},
					{
						"name": "IsOrderLineFinalized",
						"type": "bit"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastEditedWhen",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Purchasing",
					"table": "PurchaseOrderLines"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PurchaseOrderLinesODS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ODS002",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PurchaseOrderLineID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PurchaseOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderedOuters",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "ReceivedOuters",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PackageTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ExpectedUnitPricePerOuter",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "LastReceiptDate",
						"type": "date"
					},
					{
						"name": "IsOrderLineFinalized",
						"type": "bit"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastEditedWhen",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Skey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IngestDatetime",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "Purchasing",
					"table": "PurchaseOrderLines"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ODS002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PurchaseOrders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WWI002",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Purchasing"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PurchaseOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDate",
						"type": "date"
					},
					{
						"name": "DeliveryMethodID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContactPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ExpectedDeliveryDate",
						"type": "date"
					},
					{
						"name": "SupplierReference",
						"type": "nvarchar"
					},
					{
						"name": "IsOrderFinalized",
						"type": "bit"
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					},
					{
						"name": "InternalComments",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastEditedWhen",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Purchasing",
					"table": "PurchaseOrders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PurchaseOrdersODS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ODS002",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Purchasing",
					"table": "PurchaseOrders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ODS002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SupplierCategories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WWI002",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Purchasing"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SupplierCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierCategoryName",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Purchasing",
					"table": "SupplierCategories"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SupplierCategoriesODS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ODS002",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SupplierCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierCategoryName",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "IngestDatetime",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "Purchasing",
					"table": "SupplierCategories"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ODS002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SupplierCategories_Archive')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WWI002",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Purchasing"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SupplierCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierCategoryName",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Purchasing",
					"table": "SupplierCategories_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SupplierCategories_ArchiveODS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ODS002",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Purchasing",
					"table": "SupplierCategories_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ODS002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SupplierTransactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WWI002",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Purchasing"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SupplierTransactionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TransactionTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PurchaseOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PaymentMethodID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierInvoiceNumber",
						"type": "nvarchar"
					},
					{
						"name": "TransactionDate",
						"type": "date"
					},
					{
						"name": "AmountExcludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TransactionAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "OutstandingBalance",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "FinalizationDate",
						"type": "date"
					},
					{
						"name": "IsFinalized",
						"type": "bit"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastEditedWhen",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Purchasing",
					"table": "SupplierTransactions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SupplierTransactionsODS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ODS002",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Purchasing",
					"table": "SupplierTransactions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ODS002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Supplier_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Integration002",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Integration",
					"table": "Supplier_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Integration002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Suppliers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WWI002",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Purchasing"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SupplierID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierName",
						"type": "nvarchar"
					},
					{
						"name": "SupplierCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PrimaryContactPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AlternateContactPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DeliveryMethodID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DeliveryCityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PostalCityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierReference",
						"type": "nvarchar"
					},
					{
						"name": "BankAccountName",
						"type": "nvarchar"
					},
					{
						"name": "BankAccountBranch",
						"type": "nvarchar"
					},
					{
						"name": "BankAccountCode",
						"type": "nvarchar"
					},
					{
						"name": "BankAccountNumber",
						"type": "nvarchar"
					},
					{
						"name": "BankInternationalCode",
						"type": "nvarchar"
					},
					{
						"name": "PaymentDays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InternalComments",
						"type": "nvarchar"
					},
					{
						"name": "PhoneNumber",
						"type": "nvarchar"
					},
					{
						"name": "FaxNumber",
						"type": "nvarchar"
					},
					{
						"name": "WebsiteURL",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryAddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryAddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryPostalCode",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryLocation",
						"type": "geography"
					},
					{
						"name": "PostalAddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "PostalAddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "PostalPostalCode",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Purchasing",
					"table": "Suppliers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SuppliersODS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ODS002",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Purchasing",
					"table": "Suppliers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ODS002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Suppliers_Archive')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WWI002",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Purchasing"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SupplierID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierName",
						"type": "nvarchar"
					},
					{
						"name": "SupplierCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PrimaryContactPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AlternateContactPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DeliveryMethodID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DeliveryCityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PostalCityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierReference",
						"type": "nvarchar"
					},
					{
						"name": "BankAccountName",
						"type": "nvarchar"
					},
					{
						"name": "BankAccountBranch",
						"type": "nvarchar"
					},
					{
						"name": "BankAccountCode",
						"type": "nvarchar"
					},
					{
						"name": "BankAccountNumber",
						"type": "nvarchar"
					},
					{
						"name": "BankInternationalCode",
						"type": "nvarchar"
					},
					{
						"name": "PaymentDays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InternalComments",
						"type": "nvarchar"
					},
					{
						"name": "PhoneNumber",
						"type": "nvarchar"
					},
					{
						"name": "FaxNumber",
						"type": "nvarchar"
					},
					{
						"name": "WebsiteURL",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryAddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryAddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryPostalCode",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryLocation",
						"type": "geography"
					},
					{
						"name": "PostalAddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "PostalAddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "PostalPostalCode",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Purchasing",
					"table": "Suppliers_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Suppliers_ArchiveODS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ODS002",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Purchasing",
					"table": "SupplierCategories_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ODS002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TableList')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WWI002",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Integration002')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Integration002_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS002')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ODS002_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWI002')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('WWI002_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PurchaseStaging')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[[Purchase Staging Key]\n      ,[Date Key]\n      ,[Supplier Key]\n      ,[Stock Item Key]\n      ,[WWI Purchase Order ID]\n      ,[Ordered Outers]\n      ,[Ordered Quantity]\n      ,[Received Outers]\n      ,[Package]\n      ,[Is Order Finalized]\n      ,[WWI Supplier ID]\n      ,[WWI Stock Item ID]\n      ,[Last Modified When]",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PurchaseOrdersODS",
								"type": "DatasetReference"
							},
							"name": "PurchaseOrders"
						},
						{
							"dataset": {
								"referenceName": "PurchaseOrderLinesODS",
								"type": "DatasetReference"
							},
							"name": "PurchaseOrderLines"
						},
						{
							"dataset": {
								"referenceName": "SuppliersODS",
								"type": "DatasetReference"
							},
							"name": "Suppliers"
						},
						{
							"dataset": {
								"referenceName": "StockItems",
								"type": "DatasetReference"
							},
							"name": "StockItems"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference"
							},
							"name": "sinkPurchaseStaging"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "select2"
						},
						{
							"name": "select3"
						},
						{
							"name": "join1"
						},
						{
							"name": "join2"
						},
						{
							"name": "WWIStockItemID"
						},
						{
							"name": "join3"
						},
						{
							"name": "select5"
						},
						{
							"name": "select6"
						},
						{
							"name": "derivedOrderedQuantity"
						}
					],
					"scriptLines": [
						"source(output(",
						"          PurchaseOrderID as integer,",
						"          SupplierID as integer,",
						"          OrderDate as date,",
						"          DeliveryMethodID as integer,",
						"          ContactPersonID as integer,",
						"          ExpectedDeliveryDate as date,",
						"          SupplierReference as string,",
						"          IsOrderFinalized as boolean,",
						"          Comments as string,",
						"          InternalComments as string,",
						"          LastEditedBy as integer,",
						"          LastEditedWhen as timestamp,",
						"          IngestDatetime as string,",
						"          Skey as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> PurchaseOrders",
						"source(output(",
						"          PurchaseOrderLineID as integer,",
						"          PurchaseOrderID as integer,",
						"          StockItemID as integer,",
						"          OrderedOuters as integer,",
						"          Description as string,",
						"          ReceivedOuters as integer,",
						"          PackageTypeID as integer,",
						"          ExpectedUnitPricePerOuter as decimal(18,2),",
						"          LastReceiptDate as date,",
						"          IsOrderLineFinalized as boolean,",
						"          LastEditedBy as integer,",
						"          LastEditedWhen as timestamp,",
						"          Skey as integer,",
						"          IngestDatetime as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> PurchaseOrderLines",
						"source(output(",
						"          SupplierID as integer,",
						"          SupplierName as string,",
						"          SupplierCategoryID as integer,",
						"          PrimaryContactPersonID as integer,",
						"          AlternateContactPersonID as integer,",
						"          DeliveryMethodID as integer,",
						"          DeliveryCityID as integer,",
						"          PostalCityID as integer,",
						"          SupplierReference as string,",
						"          BankAccountName as string,",
						"          BankAccountBranch as string,",
						"          BankAccountCode as string,",
						"          BankAccountNumber as string,",
						"          BankInternationalCode as string,",
						"          PaymentDays as integer,",
						"          InternalComments as string,",
						"          PhoneNumber as string,",
						"          FaxNumber as string,",
						"          WebsiteURL as string,",
						"          DeliveryAddressLine1 as string,",
						"          DeliveryAddressLine2 as string,",
						"          DeliveryPostalCode as string,",
						"          DeliveryLocation as binary,",
						"          PostalAddressLine1 as string,",
						"          PostalAddressLine2 as string,",
						"          PostalPostalCode as string,",
						"          LastEditedBy as integer,",
						"          ValidFrom as timestamp,",
						"          ValidTo as timestamp,",
						"          IngestDatetime as string,",
						"          Skey as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Suppliers",
						"source(output(",
						"          StockItemID as integer,",
						"          StockItemName as string,",
						"          SupplierID as integer,",
						"          ColorID as integer,",
						"          UnitPackageID as integer,",
						"          OuterPackageID as integer,",
						"          Brand as string,",
						"          Size as string,",
						"          LeadTimeDays as integer,",
						"          QuantityPerOuter as integer,",
						"          IsChillerStock as boolean,",
						"          Barcode as string,",
						"          TaxRate as decimal(18,3),",
						"          UnitPrice as decimal(18,2),",
						"          RecommendedRetailPrice as decimal(18,2),",
						"          TypicalWeightPerUnit as decimal(18,3),",
						"          MarketingComments as string,",
						"          InternalComments as string,",
						"          Photo as binary,",
						"          CustomFields as string,",
						"          Tags as string,",
						"          SearchDetails as string,",
						"          LastEditedBy as integer,",
						"          ValidFrom as timestamp,",
						"          ValidTo as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StockItems",
						"PurchaseOrders select(mapColumn(",
						"          PurchaseOrderID,",
						"          SupplierKey = SupplierID,",
						"          WWIPurchaseOrderID = Skey,",
						"          OrderDate,",
						"          LastEditedWhen,",
						"          WWIIngestDatetime = IngestDatetime",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"PurchaseOrderLines select(mapColumn(",
						"          PurchaseOrderLineID,",
						"          PurchaseOrderID,",
						"          StockItemKey = StockItemID,",
						"          OrderedOuters,",
						"          ReceivedOuters,",
						"          IsOrderLineFinalized,",
						"          IngestDatetime",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"Suppliers select(mapColumn(",
						"          SupplierID,",
						"          IngestDatetime,",
						"          WWISupplierID = Skey",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select3",
						"select1, select2 join(select1@PurchaseOrderID == select2@PurchaseOrderID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join3, select3 join(SupplierKey == SupplierID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"select5 keyGenerate(output(WWIStockItemID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> WWIStockItemID",
						"join1, WWIStockItemID join(StockItemKey == StockItemID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join3",
						"StockItems select(mapColumn(",
						"          StockItemID,",
						"          OuterPackageID,",
						"          QuantityPerOuter",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select5",
						"derivedOrderedQuantity select(mapColumn(",
						"          DateKey = OrderDate,",
						"          SupplierKey,",
						"          StockItemKey,",
						"          WWIPurchaseOrderID,",
						"          OrderedOuters,",
						"          OrderedQuantity,",
						"          ReceivedOuters,",
						"          Package = OuterPackageID,",
						"          IsOrderLineFinalized,",
						"          QuantityPerOuter,",
						"          WWISupplierID,",
						"          WWIStockItemID,",
						"          LastModifiedWhen = LastEditedWhen",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select6",
						"join2 derive(OrderedQuantity = QuantityPerOuter*OrderedOuters) ~> derivedOrderedQuantity",
						"select6 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sinkPurchaseStaging"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PurchaseOrdersODS')]",
				"[concat(variables('factoryId'), '/datasets/PurchaseOrderLinesODS')]",
				"[concat(variables('factoryId'), '/datasets/SuppliersODS')]",
				"[concat(variables('factoryId'), '/datasets/StockItems')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StockItems')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WWI002",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "StockItemID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemName",
						"type": "nvarchar"
					},
					{
						"name": "SupplierID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ColorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPackageID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OuterPackageID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Brand",
						"type": "nvarchar"
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "LeadTimeDays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QuantityPerOuter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsChillerStock",
						"type": "bit"
					},
					{
						"name": "Barcode",
						"type": "nvarchar"
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "RecommendedRetailPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TypicalWeightPerUnit",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "MarketingComments",
						"type": "nvarchar"
					},
					{
						"name": "InternalComments",
						"type": "nvarchar"
					},
					{
						"name": "Photo",
						"type": "varbinary"
					},
					{
						"name": "CustomFields",
						"type": "nvarchar"
					},
					{
						"name": "Tags",
						"type": "nvarchar"
					},
					{
						"name": "SearchDetails",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Warehouse",
					"table": "StockItems"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Integration002",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Integration",
					"table": "Purchase_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Integration002')]"
			]
		}
	]
}